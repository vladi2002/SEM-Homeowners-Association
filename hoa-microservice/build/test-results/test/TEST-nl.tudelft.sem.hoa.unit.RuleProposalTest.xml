<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="nl.tudelft.sem.hoa.unit.RuleProposalTest" tests="13" skipped="0" failures="0" errors="0" timestamp="2023-01-25T00:41:40" hostname="LAPTOP-VLADI2" time="0.004">
  <properties/>
  <testcase name="proposalNotEqualsNull()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.001"/>
  <testcase name="constructorTest()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="proposalNotEqualsString()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="proposalPkNotEqualsNull()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.001"/>
  <testcase name="updateVote()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="equalsTestSuccess()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="getType()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="proposalPkNotEqualsString()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.001"/>
  <testcase name="getRuleId()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="proposalEquals()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="proposalPkHashCode()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <testcase name="hashCodeTest()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.001"/>
  <testcase name="proposalPkEquals()" classname="nl.tudelft.sem.hoa.unit.RuleProposalTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
